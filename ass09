# Q1
# The function used to open a file is 'open()'. 
# Different modes of opening a file:
# 'r': Open a file for reading. (Default)
# 'w': Open a file for writing. Creates a new file if it does not exist, truncates the file if it exists.
# 'a': Open a file for appending. Creates a new file if it does not exist.
# 'b': Binary mode.
# '+': Open a file for updating (reading and writing).

# Q2
# The close() function is used to close an open file in Python. 
# It is important to close a file to release the resources associated with it and to avoid data corruption.

# Q3
# Write to a file
with open("data.txt", "w") as file:
    file.write("I want to become a Data Scientist")

# Read from the file
with open("data.txt", "r") as file:
    content = file.read()
    print("Content of the file:", content)

# Q4
# read(): Reads the entire content of the file.
# readline(): Reads a single line from the file.
# readlines(): Reads all lines from the file and returns a list where each line is an element.

# Example:
with open("data.txt", "r") as file:
    content = file.read()  # Read entire content
    print("Using read():", content)

    file.seek(0)  # Move the cursor to the beginning of the file
    line = file.readline()  # Read single line
    print("Using readline():", line)

    file.seek(0)  # Move the cursor to the beginning of the file
    lines = file.readlines()  # Read all lines
    print("Using readlines():", lines)

# Q5
# The 'with' statement is used with 'open()' to automatically close the file when the block of code inside 'with' is executed.
# The advantage of using 'with' statement and 'open()' together is that it ensures proper resource management and avoids the need to explicitly call 'close()' on the file.

# Q6
# write(): Writes a string to the file.
# writelines(): Writes a list of strings to the file.

# Example:
lines = ["This is line 1\n", "This is line 2\n", "This is line 3\n"]
with open("output.txt", "w") as file:
    file.writelines(lines)



